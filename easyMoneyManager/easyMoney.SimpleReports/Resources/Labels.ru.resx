<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountTitle" xml:space="preserve">
    <value>Счет</value>
  </data>
  <data name="ActualBalanceChangesDescription" xml:space="preserve">
    <value>Этот отчет показывает изменения в активах и долгах за указанный период.</value>
  </data>
  <data name="ActualBalanceChangesFormTitleFormat" xml:space="preserve">
    <value>Изменения баланса, с {0} по {1}</value>
  </data>
  <data name="ActualBalanceChangesTitle" xml:space="preserve">
    <value>Изменения баланса</value>
  </data>
  <data name="AmountByTagsChartDescription" xml:space="preserve">
    <value>Этот отчет показывает суммы, потраченные и полученные по каждой метке, в графической форме. Пожалуйста, учтите, что транзакции без меток не учитываются в этом отчете.</value>
  </data>
  <data name="AmountByTagsChartTitle" xml:space="preserve">
    <value>Суммы по меткам (график)</value>
  </data>
  <data name="AmountByTagsDescription" xml:space="preserve">
    <value>Этот отчет показывает суммы, потраченные и полученные по каждой метке. Пожалуйста, учтите, что транзакции без меток не учитываются в этом отчете.</value>
  </data>
  <data name="AmountByTagsFormTitleFormat" xml:space="preserve">
    <value>Суммы по меткам, с {0} по {1}</value>
  </data>
  <data name="AmountByTagsTitle" xml:space="preserve">
    <value>Суммы по меткам</value>
  </data>
  <data name="AmountsByTransactionTypesDescription" xml:space="preserve">
    <value>Этот отчет показывает суммы по каждому типу транзакции в графической форме. Все транзакции (включая корректировки баланса) будут включены в этот отчет.</value>
  </data>
  <data name="AmountsByTransactionTypesFormTitleFormat" xml:space="preserve">
    <value>Суммы по типам транзакций, с {0} по {1}</value>
  </data>
  <data name="AmountsByTransactionTypesTitle" xml:space="preserve">
    <value>Суммы по типам транзакций</value>
  </data>
  <data name="AmountTitle" xml:space="preserve">
    <value>Сумма</value>
  </data>
  <data name="AssetsPlannedTitle" xml:space="preserve">
    <value>Активы (план)</value>
  </data>
  <data name="AssetsTitle" xml:space="preserve">
    <value>Активы</value>
  </data>
  <data name="DateTimeTitle" xml:space="preserve">
    <value>Дата/время</value>
  </data>
  <data name="DebtsPlannedTitle" xml:space="preserve">
    <value>Долги (план)</value>
  </data>
  <data name="DebtsTitle" xml:space="preserve">
    <value>Долги</value>
  </data>
  <data name="DeltaTitle" xml:space="preserve">
    <value>Дельта</value>
  </data>
  <data name="EarnedTitle" xml:space="preserve">
    <value>Получено</value>
  </data>
  <data name="OnlyAccountTypes" xml:space="preserve">
    <value>Показаны типы счетов: {0}</value>
  </data>
  <data name="OnlyTags" xml:space="preserve">
    <value>Показаны метки: {0}</value>
  </data>
  <data name="OnlyTransactionTypesTypes" xml:space="preserve">
    <value>Показаны типы тразнзакций: {0}</value>
  </data>
  <data name="PlannedBalanceChangesDescription" xml:space="preserve">
    <value>Этот отчет показывает возможные изменения активов и долгов в соответствии с текущими планами.</value>
  </data>
  <data name="PlannedBalanceChangesFormTitleFormat" xml:space="preserve">
    <value>Прогноз баланса, с {0} по {1}</value>
  </data>
  <data name="PlannedBalanceChangesTitle" xml:space="preserve">
    <value>Прогноз баланса</value>
  </data>
  <data name="SpentTitle" xml:space="preserve">
    <value>Потрачено</value>
  </data>
  <data name="TagsTitle" xml:space="preserve">
    <value>Метки</value>
  </data>
  <data name="TagTitle" xml:space="preserve">
    <value>Метка</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Заголовок</value>
  </data>
  <data name="TransactionsByAccountDescription" xml:space="preserve">
    <value>Этот отчет показывает транзакции по выбранным счетам в табличной форме. </value>
  </data>
  <data name="TransactionsByAccountFormTitleFormat" xml:space="preserve">
    <value>Транзакции по счету: {0}, с {1} по {2}</value>
  </data>
  <data name="TransactionsByAccountTitle" xml:space="preserve">
    <value>Транзакции по счету</value>
  </data>
  <data name="TransactionsTitle" xml:space="preserve">
    <value>Транзакции</value>
  </data>
  <data name="TypeTitle" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="DateTitle" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="DayTotalsTitle" xml:space="preserve">
    <value>Итого (за день):</value>
  </data>
  <data name="DifferenceIconTitle" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="DifferenceTitle" xml:space="preserve">
    <value>Разница</value>
  </data>
  <data name="EarnTitle" xml:space="preserve">
    <value>Доход (план)</value>
  </data>
  <data name="ImplementedOnAnotherDayTitle" xml:space="preserve">
    <value>В другой день</value>
  </data>
  <data name="MonthBalanceDescription" xml:space="preserve">
    <value>Баланс за месяц показывает транзакции и планы на заданный месяц в табличной форме. Этот отчет использует цветовое кодирование информации:
 * зеленые строки - запланированные транзакции;
 * синие строки - транзакции, которые были запланированы и должны быть реализованы в будущем;
 * красные строки - запланированные транзакции, которые не были реализованы;
 * оранжевые строки - незапланированные транзакции.
Этот отчет также суммирует отклонения от плана за каждый день и весь месяц. Чем меньше это отклонение, тем лучше (это означает, что расходы и доходы были хорошо запланированы изначально).</value>
  </data>
  <data name="MonthBalanceTitle" xml:space="preserve">
    <value>Баланс за месяц</value>
  </data>
  <data name="MonthTotalsTitle" xml:space="preserve">
    <value>ИТОГО (ЗА МЕСЯЦ):</value>
  </data>
  <data name="NotImplementedTitle" xml:space="preserve">
    <value>Не реализовано!</value>
  </data>
  <data name="NotImplementedYetTitle" xml:space="preserve">
    <value>Пока не реализовано</value>
  </data>
  <data name="NotPlannedTitle" xml:space="preserve">
    <value>Не планировано</value>
  </data>
  <data name="PlannedAmountTitle" xml:space="preserve">
    <value>Запланировано</value>
  </data>
  <data name="PlanTitle" xml:space="preserve">
    <value>План</value>
  </data>
  <data name="SpendTitle" xml:space="preserve">
    <value>Расход (план)</value>
  </data>
  <data name="TransactionAmountTitle" xml:space="preserve">
    <value>Сумма</value>
  </data>
  <data name="TransactionTitle" xml:space="preserve">
    <value>Транзакция</value>
  </data>
  <data name="MonthBalanceFormTitleFormat" xml:space="preserve">
    <value>Баланс за месяц, {0:Y}</value>
  </data>
  <data name="DeviationAnotherDayTitle" xml:space="preserve">
    <value>Отклонение, другой день</value>
  </data>
  <data name="DeviationFromPlanTitle" xml:space="preserve">
    <value>Отклонение от плана</value>
  </data>
  <data name="ImplementedTitle" xml:space="preserve">
    <value>Готово</value>
  </data>
  <data name="ImplementsTitle" xml:space="preserve">
    <value>Запланировано</value>
  </data>
  <data name="SignificantDifferenceTitle" xml:space="preserve">
    <value>Существенная разница!</value>
  </data>
  <data name="StatusTitle" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="TypeIconTitle" xml:space="preserve">
    <value>T</value>
  </data>
  <data name="SpendingStructureDescription" xml:space="preserve">
    <value>Этот отчет показывает диаграмму, отражающую структуру расходов в разрезе типов транзакций.</value>
  </data>
  <data name="SpendingStructureFormTitleFormat" xml:space="preserve">
    <value>Структура расходов, с {0} по {1}</value>
  </data>
  <data name="SpendingStructureTitle" xml:space="preserve">
    <value>Структура расходов</value>
  </data>
</root>