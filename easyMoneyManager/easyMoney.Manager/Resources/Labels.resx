<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountAmountGroupBoxLabel" xml:space="preserve">
    <value>Account and amount</value>
  </data>
  <data name="AccountBalanceButtonToolTip" xml:space="preserve">
    <value>Correct account balance</value>
  </data>
  <data name="AccountCorrectionLabel" xml:space="preserve">
    <value>Account balance correction</value>
  </data>
  <data name="AccountValidationErrorsFoundFormat" xml:space="preserve">
    <value>Validation found these problems with this account:

{0}

This prevents account from being saved. Please, correct errors and then try again.</value>
  </data>
  <data name="AccountValidationTitle" xml:space="preserve">
    <value>Account validation information</value>
  </data>
  <data name="AccountValidationWarningsFoundFormat" xml:space="preserve">
    <value>Validation found these problems with this account:

{0}

Would you like to save account anyway?</value>
  </data>
  <data name="BalanceFormat" xml:space="preserve">
    <value>Balance: {0:C}</value>
  </data>
  <data name="CreateAccountsFirst" xml:space="preserve">
    <value>You should define accounts first!</value>
  </data>
  <data name="DefaultStatus" xml:space="preserve">
    <value>easyMoney is ready</value>
  </data>
  <data name="DeleteAccountFormat" xml:space="preserve">
    <value>Are you sure want to delete account: {0}?

All transactions with this account will remain in the list, but account balance will be removed from your assets or debts.</value>
  </data>
  <data name="DeleteAccountTitle" xml:space="preserve">
    <value>Delete account?</value>
  </data>
  <data name="DeletePairedTransactionFormat" xml:space="preserve">
    <value>Are you sure want to delete transaction: {0}?

There is a paired transaction; by deleting this transaction you will also delete paired one.</value>
  </data>
  <data name="DeletePlannedTransactionFormat" xml:space="preserve">
    <value>Are you sure want to delete planned transaction: {0}?</value>
  </data>
  <data name="DeletePlannedTransactionTitle" xml:space="preserve">
    <value>Delete planned transaction?</value>
  </data>
  <data name="DeleteTransactionFormat" xml:space="preserve">
    <value>Are you sure want to delete transaction: {0}?</value>
  </data>
  <data name="DeleteTransactionTitle" xml:space="preserve">
    <value>Delete transaction?</value>
  </data>
  <data name="NewIncomeLabel" xml:space="preserve">
    <value>New income</value>
  </data>
  <data name="NewPaymentLabel" xml:space="preserve">
    <value>New payment</value>
  </data>
  <data name="NoAccountsText" xml:space="preserve">
    <value>There are no accounts defined!

Switching you to Accounts tab, where you can define proper accounts.</value>
  </data>
  <data name="NoAccountsTitle" xml:space="preserve">
    <value>There are no accounts defined!</value>
  </data>
  <data name="NoUpdatesFormat" xml:space="preserve">
    <value>easyMoney v{0} is up to date.
No newer releases are available at this time.</value>
  </data>
  <data name="NoUpdatesTitle" xml:space="preserve">
    <value>easyMoney is up to date</value>
  </data>
  <data name="PlanImplementedToolTip" xml:space="preserve">
    <value>Planned transaction is implemented.</value>
  </data>
  <data name="PlannedTransactionSubmitButtonToolTip" xml:space="preserve">
    <value>Submit a transaction implementing this plan</value>
  </data>
  <data name="PlannedTransactionValidationErrorsFoundFormat" xml:space="preserve">
    <value>Validation found these problems with this planned transaction:

{0}

This prevents planned transaction from being saved. Please, correct errors and then try again.</value>
  </data>
  <data name="PlannedTransactionValidationTitle" xml:space="preserve">
    <value>Planned transaction validation information</value>
  </data>
  <data name="PlannedTransactionValidationWarningsFoundFormat" xml:space="preserve">
    <value>Validation found these problems with this planned transaction:

{0}

Would you like to save planned transaction anyway?</value>
  </data>
  <data name="PlanNotImplementedToolTip" xml:space="preserve">
    <value>Planned transaction is NOT implemented!</value>
  </data>
  <data name="PlanNotImplementedYetToolTip" xml:space="preserve">
    <value>Planned transaction is not implemented yet.</value>
  </data>
  <data name="TagToolTipFormat" xml:space="preserve">
    <value>Display all resources with tag '{0}'</value>
  </data>
  <data name="TemplateAccountNotFoundFormat" xml:space="preserve">
    <value>This transaction template requires account of type [{0}].

Please, create proper account to use this transaction template.</value>
  </data>
  <data name="TemplateAccountNotFoundTitle" xml:space="preserve">
    <value>Required account not found</value>
  </data>
  <data name="TransactionDestinationValidation" xml:space="preserve">
    <value>Destination:</value>
  </data>
  <data name="TransactionSourceValidation" xml:space="preserve">
    <value>Source:</value>
  </data>
  <data name="TransactionValidationErrorsFoundFormat" xml:space="preserve">
    <value>Validation found these problems with this transaction:

{0}

This prevents transaction from being saved. Please, correct errors and then try again.</value>
  </data>
  <data name="TransactionValidationTitle" xml:space="preserve">
    <value>Transaction validation information</value>
  </data>
  <data name="TransactionValidationWarningsFoundFormat" xml:space="preserve">
    <value>Validation found these problems with this transaction:

{0}

Would you like to save transaction anyway?</value>
  </data>
  <data name="UpdateAvailableFormat" xml:space="preserve">
    <value>There is a new version of easyMoney available for download.
You are running version {0}, and {1} is available.

Update will be downloaded in background. easyMoney will be restarted and upgraded when update is ready.

Do you want to proceed with update?</value>
  </data>
  <data name="UpdateAvailableTitle" xml:space="preserve">
    <value>New easyMoney is available</value>
  </data>
  <data name="UpdateCheckStatus" xml:space="preserve">
    <value>easyMoney is checking for updates...</value>
  </data>
  <data name="UpdateDownloadingStatus" xml:space="preserve">
    <value>easyMoney is downloading update...</value>
  </data>
  <data name="UpdateErrorFormat" xml:space="preserve">
    <value>There was an error during update process:

{0}

Please, contact easyMoney developers regarding this error.</value>
  </data>
  <data name="UpdateErrorTitle" xml:space="preserve">
    <value>Update checking error</value>
  </data>
  <data name="UpdateFailedStatus" xml:space="preserve">
    <value>easyMoney update failed!</value>
  </data>
  <data name="UpdatesNotFoundStatus" xml:space="preserve">
    <value>easyMoney is up to date</value>
  </data>
  <data name="CopyFormat" xml:space="preserve">
    <value>Copy: {0}</value>
  </data>
  <data name="DeletePairedPlannedTransactionFormat" xml:space="preserve">
    <value>Are you sure want to delete planned transaction: {0}?

There is a paired planned transaction; by deleting this planned transaction you will also delete paired one.</value>
  </data>
  <data name="PlannedTemplateFormat" xml:space="preserve">
    <value>Planned: {0}</value>
  </data>
  <data name="RecurrencyUntilFormat" xml:space="preserve">
    <value>{0}, until {1:d}</value>
  </data>
  <data name="TransactionNotPlanned" xml:space="preserve">
    <value>This transaction is not planned.</value>
  </data>
  <data name="BalanceLaterHint" xml:space="preserve">
    <value>You will set account balance afterwards</value>
  </data>
  <data name="ApplicationLoadingMessage" xml:space="preserve">
    <value>easyMoney is starting up...</value>
  </data>
  <data name="PortableFormTitleFormat" xml:space="preserve">
    <value>easyMoney v{0} - {1}</value>
  </data>
  <data name="ClearCustomMetadataMessage" xml:space="preserve">
    <value>Are you sure want to delete all custom metadata?

WARNING! All accounts, plans, transactions based on custom metadata will be deleted permanently. This operation could not be undone!</value>
  </data>
  <data name="ClearCustomMetadataTitle" xml:space="preserve">
    <value>Are you sure want to delete all custom metadata?</value>
  </data>
  <data name="DeleteTagFormat" xml:space="preserve">
    <value>Are you sure want to delete tag '{0}'?

This tag will be removed from all information entries. This operation could not be undone!</value>
  </data>
  <data name="DeleteTagTitle" xml:space="preserve">
    <value>Delete selected tag?</value>
  </data>
  <data name="EmptyTagNotAllowed" xml:space="preserve">
    <value>Tag could not be empty string.</value>
  </data>
  <data name="TagAlreadyExistFormat" xml:space="preserve">
    <value>Tag '{0}' already exist, please use different string.</value>
  </data>
  <data name="TagRenameErrorTitle" xml:space="preserve">
    <value>Error renaming tag</value>
  </data>
  <data name="FileFilter" xml:space="preserve">
    <value>easyMoney data files (*.xemdf)|*.xemdf|All files (*.*)|*.*</value>
  </data>
  <data name="DataLoadingMessage" xml:space="preserve">
    <value>easyMoney is loading data file...</value>
  </data>
  <data name="PasswordInvalid" xml:space="preserve">
    <value>Password NOT active</value>
  </data>
  <data name="PasswordValid" xml:space="preserve">
    <value>Password active</value>
  </data>
  <data name="PasswordIncorrect" xml:space="preserve">
    <value>Password is incorrect. Please, enter correct password.</value>
  </data>
  <data name="ActionNeededMessage" xml:space="preserve">
    <value>Please, respond...</value>
  </data>
  <data name="PleaseWaitMessage" xml:space="preserve">
    <value>Please, wait...</value>
  </data>
  <data name="DefaultFormTitleFormat" xml:space="preserve">
    <value>easyMoney v{0}</value>
  </data>
  <data name="AccountHidden" xml:space="preserve">
    <value>hidden</value>
  </data>
  <data name="StatsDay" xml:space="preserve">
    <value>Day, {0}</value>
  </data>
  <data name="StatsMonth" xml:space="preserve">
    <value>Month, {0}</value>
  </data>
  <data name="StatsYear" xml:space="preserve">
    <value>Year, {0}</value>
  </data>
</root>